_BASE_: "./Base-CRPNet.yaml"
MODEL:
  # WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  WEIGHTS: "models/retinanet_Rh_50_FPN_128_dw_6x.pth"
  # WEIGHTS: "output/sixdpose/occlusion/ape/crpnet_Rh_50_FPN_128_dw_res5d_1x/crpnet_Rh_50_FPN_128_dw_res5d_det_1x.pth"
  BACKBONE:
    NAME: "build_crpnet_resneth_fpn_backbone"
  RESNETH:
    DEPTH: 50
    FREEZE_AT: 2
    OUT_FEATURES: ["res3", "res4", "res5"]
    DILATION_ON_PER_STAGE: [False, False, False, True]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [16, 32, 64, 128, 256 ]]"]
  FPN:
    OUT_CHANNELS: 128
  CRPNET: 
    NUM_CONVS: 1
    KPT_WEIGHT: 1.0
DATASETS:
  TRAIN: ("occlusion_can_train",)
  TEST: ("occlusion_duck_val",)
SOLVER: # for 2 GPUs
  IMS_PER_BATCH: 4
  BASE_LR: 0.0025  # original 0.00125
  STEPS: (240000, 320000)
  MAX_ITER: 360000
  CHECKPOINT_PERIOD: 40000
INPUT:
  MIN_SIZE_TRAIN: (320, 352, 384, 416, 448, 480)
  MAX_SIZE_TRAIN: 800
  MIN_SIZE_TEST: 480
  MAX_SIZE_TEST: 800
OUTPUT_DIR: "./output/sixdpose/occlusion/duck/crpnet_Rh_50_FPN_128_dw_res5d_1x"
